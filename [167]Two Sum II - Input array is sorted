Way one:two pointers:
class Solution:  
    def twoSum(self, numbers, target):  
        """ 
        :type numbers: List[int] 
        :type target: int 
        :rtype: List[int] 
        """  
        i=0  
        j=len(numbers)-1  
        while(i<j):  
            if(numbers[i]+numbers[j]<target):  
                i+=1  
            elif(numbers[i]+numbers[j]>target):  
                j-=1  
            else:  
                return [i+1,j+1]  
 
 
 
 Way two:dictionary:
 class Solution:  
    def twoSum(self, numbers, target):  
        """ 
        :type numbers: List[int] 
        :type target: int 
        :rtype: List[int] 
        """  
        dic={}  
        for i,number in enumerate(numbers):  
            if((target-number) in dic):  
                return [dic[target-number]+1,i+1]  
            dic[number]=i  
